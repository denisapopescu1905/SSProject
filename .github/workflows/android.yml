name: CI/CD Android App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk

jobs:
  android-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Install Android SDK Command Line Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools
          mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest

      - name: Accept Android SDK Licenses and install packages
        run: |
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      - name: Add Android SDK to PATH
        run: echo "${ANDROID_SDK_ROOT}/platform-tools" >> $GITHUB_PATH

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest jacocoTestReport

      - name: Upload Jacoco test coverage report
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: app/build/reports/jacoco/jacocoTestReport/html

      - name: Run SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew sonarqube \
            -Dsonar.projectKey=denisapopescu1905_ss_final_java \
            -Dsonar.organization=denisapopescu1905 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN

  build:
    runs-on: ubuntu-latest
    needs: android-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Recreate certs/ from GitHub secrets
        run: |
          mkdir -p mqtt-pipeline/mqtt/certs
          echo "${{ secrets.CA_CRT }}" > mqtt-pipeline/mqtt/certs/ca.crt
          echo "${{ secrets.BROKER_CRT }}" > mqtt-pipeline/mqtt/certs/broker.crt
          echo "${{ secrets.CLIENT_CRT }}" > mqtt-pipeline/mqtt/certs/client.crt
          echo "${{ secrets.CLIENT_KEY }}" > mqtt-pipeline/mqtt/certs/client_key.key

      - name: Build and Push Android App
        uses: docker/build-push-action@v5
        with:
          context: ./android_app
          push: true
          tags: denisapopescu1905/android-app:latest

      - name: Build and Push Mosquitto
        uses: docker/build-push-action@v5
        with:
          context: ./mqtt-pipeline/mqtt
          push: true
          tags: denisapopescu1905/mosquitto:latest
