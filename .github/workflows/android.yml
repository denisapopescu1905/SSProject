name: CI/CD Android App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  android-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 33
          build-tools: 33.0.2
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest jacocoTestReport

      - name: Upload Jacoco test coverage report
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: app/build/reports/jacoco/jacocoTestReport/html

      # (Opțional) Instrumentation tests - emulator runner
      # - name: Run instrumentation tests
      #   uses: reactivecircus/android-emulator-runner@v2
      #   with:
      #     api-level: 33
      #     script: ./gradlew connectedDebugAndroidTest

  build:
    runs-on: ubuntu-latest
    needs: android-tests  # Așteaptă finalizarea testelor

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Recreate certs/ from GitHub secrets
        run: |
          mkdir -p mqtt-pipeline/mqtt/certs
          echo "${{ secrets.CA_CRT }}" > mqtt-pipeline/mqtt/certs/ca.crt
          echo "${{ secrets.BROKER_CRT }}" > mqtt-pipeline/mqtt/certs/broker.crt
          echo "${{ secrets.CLIENT_CRT }}" > mqtt-pipeline/mqtt/certs/client.crt
          echo "${{ secrets.CLIENT_KEY }}" > mqtt-pipeline/mqtt/certs/client_key.key

      - name: Build and Push Android App
        uses: docker/build-push-action@v5
        with:
          context: ./android_app
          push: true
          tags: denisapopescu1905/android-app:latest

      - name: Build and Push Mosquitto
        uses: docker/build-push-action@v5
        with:
          context: ./mqtt-pipeline/mqtt
          push: true
          tags: denisapopescu1905/mosquitto:latest

 sonar-analysis:
    runs-on: ubuntu-latest
    needs: android-tests  # așteaptă testele

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # important pentru Sonar să vadă istoricul Git

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info